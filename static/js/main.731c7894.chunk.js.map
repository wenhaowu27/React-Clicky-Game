{"version":3,"sources":["components/CharacterCard/CharacterCard.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["CharacterCard","props","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","highscore","App","state","characters","gameOver","setState","console","log","this","forEach","isClicked","alert","find","o","i","sort","Math","random","map","card","key","Component","ReactDOM","render","document","getElementById"],"mappings":"koFAWeA,G,MARO,SAAAC,GAAK,OACzB,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MAC1D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,YCDxBC,G,MAFC,SAAAT,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAMU,YCS1CC,G,MATA,SAAAX,GAAK,OAClB,yBAAKC,UAAU,UACb,yBAAKA,UAAU,SAASD,EAAMU,UAC9B,yBAAKT,UAAU,UAAf,UACUD,EAAMY,MADhB,eACmCZ,EAAMa,c,OCwD9BC,G,iNAtDbC,MAAQ,CACNC,aACAJ,MAAO,EACPC,UAAW,G,EAGbI,SAAW,WAWT,OAVI,EAAKF,MAAMH,MAAQ,EAAKG,MAAMF,WAChC,EAAKK,SAAS,CAACL,UAAW,EAAKE,MAAMH,QAAQ,WAC3CO,QAAQC,IAAIC,KAAKN,MAAMF,cAG3B,EAAKE,MAAMC,WAAWM,SAAQ,SAAAN,GAC5BA,EAAWO,UAAY,KAEzBC,MAAM,yBAAD,OAA0B,EAAKT,MAAMH,QAC1C,EAAKM,SAAS,CAACN,MAAO,KACf,G,EAGTT,WAAa,SAAAC,GACX,EAAKW,MAAMC,WAAWS,MAAK,SAACC,EAAGC,GAC7B,GAAID,EAAEtB,KAAOA,EAAI,CACf,IAAIY,EAAWW,GAAGJ,UAMhB,OALAP,EAAWW,GAAGJ,UAAYP,EAAWW,GAAGJ,UAAY,EACpD,EAAKL,SAAS,CAACN,MAAQ,EAAKG,MAAMH,MAAQ,IAAI,WAC5CO,QAAQC,IAAIC,KAAKN,MAAMH,UAEzB,EAAKG,MAAMC,WAAWY,MAAK,kBAAMC,KAAKC,SAAW,OAC1C,EAEP,EAAKb,gB,wEAMH,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQL,MAAOS,KAAKN,MAAMH,MAAOC,UAAWQ,KAAKN,MAAMF,WAAvD,eACCQ,KAAKN,MAAMC,WAAWe,KAAI,SAAAC,GAAI,OAC7B,kBAAC,EAAD,CACE7B,WAAY,EAAKA,WACjBC,GAAI4B,EAAK5B,GACT6B,IAAKD,EAAK5B,GACVI,MAAOwB,EAAKxB,gB,GAhDN0B,c,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.731c7894.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CharacterCard.css\";\n\nconst CharacterCard = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default CharacterCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n  <div className=\"header\">\n    <div className=\"title\">{props.children}</div>\n    <div className=\"scores\">\n      Score: {props.score} Highscore: {props.highscore}\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Card from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport characters from \"./characters.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.characters to the characters json array\n  state = {\n    characters,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.characters.forEach(characters => {\n      characters.isClicked = 0;\n    });\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.characters.find((o, i) => {\n      if (o.id === id) {\n        if(!characters[i].isClicked){\n          characters[i].isClicked = characters[i].isClicked + 1;\n          this.setState({score : this.state.score + 1}, function(){\n            console.log(this.state.score);\n          });\n          this.state.characters.sort(() => Math.random() - 0.5)\n          return true; \n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n  // Map over this.state.characters and render a cardCard component for each card object\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>Clicky Game</Header>\n        {this.state.characters.map(card => (\n          <Card\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}